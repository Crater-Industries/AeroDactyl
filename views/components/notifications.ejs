<div id="notification-container" class="fixed bottom-4 right-4 z-50 flex flex-col gap-2 w-full max-w-md"></div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const urlParams = new URLSearchParams(window.location.search);
    const error = urlParams.get('error');
    const success = urlParams.get('success');
    const errorType = urlParams.get('errortype') || 'error';
    const err = urlParams.get('err');
    const num = urlParams.get('num'); // Added to capture the exceeded amount
    
    // Server management error messages
    const errorMessages = {
      'SERVER_NOT_FOUND': 'The server could not be found.',
      'SERVER_DELETION_FAILED': 'An error has occurred while attempting to delete the server.',
      'ERRORONCREATE': 'An error occurred while creating your server.',
      'EXCEEDRAM': num ? `You have exceeded your RAM limit by ${Math.floor(num/1024)} GB.` : 'You have exceeded your RAM limit.',
      'EXCEEDDISK': num ? `You have exceeded your disk space limit by ${Math.floor(num/1024)} GB.` : 'You have exceeded your disk space limit.',
      'EXCEEDCPU': num ? `You have exceeded your CPU limit by ${Math.floor(num/100)} cores.` : 'You have exceeded your CPU limit.',
      'TOOLITTLERAM': 'The server requires more RAM than specified.',
      'TOOLITTLEDISK': 'The server requires more disk space than specified.',
      'TOOLITTLECPU': 'The server requires more CPU than specified.',
      'TOOMUCHRAM': 'The RAM specified exceeds the maximum allowed.',
      'TOOMUCHDISK': 'The disk space specified exceeds the maximum allowed.',
      'TOOMUCHCPU': 'The CPU specified exceeds the maximum allowed.',
      'INVALIDLOCATION': 'The selected location is invalid.',
      'INVALIDEGG': 'The selected egg is invalid.',
      'MISSINGVARIABLE': 'One or more required variables are missing.',
      'LITTLESERVERNAME': 'The server name is too short.',
      'BIGSERVERNAME': 'The server name is too long.',
      'NOTANUMBER': 'One or more values are not valid numbers.',
      'ERRORONMODIFY': 'An error occurred while modifying your server.'
    };
    
    // Server management success messages
    const successMessages = {
      'SERVER_DELETED': 'Server has been successfully deleted.',
      'CREATED': 'Server has been successfully created.',
      'MODIFIED': 'Server has been successfully modified.',
      'COINS_ADDED': 'Coins have been successfully added to the user.',
      'COINS_REMOVED': 'Coins have been successfully removed from the user.',
      'COINS_SET': 'User coins have been successfully set.',
      'RESOURCES_MODIFIED': 'User resources have been successfully modified.',
      'PLAN_MODIFIED': 'User plan has been successfully modified.'
    };
    
    // Coin management error messages
    const coinErrorMessages = {
      'MISSINGID': 'Missing user ID.',
      'INVALIDID': 'Invalid user ID.',
      'MISSINGCOINS': 'Missing coin amount.',
      'INVALIDCOINNUMBER': 'Invalid coin amount.',
      'COINSIZE': 'Coin amount must be between 0 and 999,999,999,999,999.'
    };
    
    // Resource management error messages
    const resourceErrorMessages = {
      'MISSINGID': 'Missing user ID.',
      'INVALIDID': 'Invalid user ID.',
      'RAMSIZE': 'RAM amount must be between 0 and 999,999,999,999,999.',
      'DISKSIZE': 'Disk amount must be between 0 and 999,999,999,999,999.',
      'CPUSIZE': 'CPU amount must be between 0 and 999,999,999,999,999.',
      'SERVERSIZE': 'Server amount must be between 0 and 999,999,999,999,999.'
    };
    
    // Check for error messages with err parameter (higher priority)
    if (err) {
      // Only CREATED and MODIFIED are success messages in the err parameter
      if (err === 'CREATED' || err === 'MODIFIED') {
        showNotification(successMessages[err] || err, 'success');
      } else {
        // All other err values are error messages
        showNotification(errorMessages[err] || err, 'error');
      }
    }
    // Check for regular success messages
    else if (success) {
      showNotification(successMessages[success] || success, 'success');
    }
    // Check for regular error messages
    else if (error) {
      showNotification(errorMessages[error] || error, errorType);
    }
    
    // Clean up URL parameters
    if (error || success || err || num) {
      const url = new URL(window.location);
      url.searchParams.delete('error');
      url.searchParams.delete('success');
      url.searchParams.delete('errortype');
      url.searchParams.delete('err');
      url.searchParams.delete('num');
      window.history.replaceState({}, '', url);
    }
  });
  
  function showNotification(message, type = 'info') {
    const container = document.getElementById('notification-container');
    const notification = document.createElement('div');
    
    notification.className = `flex items-center justify-between p-4 rounded-lg animate-slide-up transition-all duration-300 ${
      type === 'error' ? 'bg-[#1e1517] border-l-4 border-red-500' :
      type === 'warning' ? 'bg-[#1e1a15] border-l-4 border-amber-500' :
      type === 'success' ? 'bg-[#15201a] border-l-4 border-green-500' :
      'bg-[#151a20] border-l-4 border-blue-500'
    }`;
    
    let iconSvg;
    if (type === 'error') {
      iconSvg = `<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-red-400" viewBox="0 0 20 20" fill="currentColor">
        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
      </svg>`;
    } else if (type === 'warning') {
      iconSvg = `<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-amber-400" viewBox="0 0 20 20" fill="currentColor">
        <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd" />
      </svg>`;
    } else if (type === 'success') {
      iconSvg = `<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-green-400" viewBox="0 0 20 20" fill="currentColor">
        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
      </svg>`;
    } else {
      iconSvg = `<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-blue-400" viewBox="0 0 20 20" fill="currentColor">
        <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd" />
      </svg>`;
    }
    
    notification.innerHTML = `
      <div class="flex-shrink-0">${iconSvg}</div>
      <div class="flex-1 text-white text-sm ml-3">${message}</div>
      <button class="text-white/70 hover:text-white ml-3" onclick="this.parentElement.remove()">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" viewBox="0 0 20 20" fill="currentColor">
          <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd" />
        </svg>
      </button>
    `;
    
    container.appendChild(notification);
    
    setTimeout(() => {
      notification.classList.add('opacity-0', 'translate-y-2');
      setTimeout(() => {
        notification.remove();
      }, 300);
    }, 5000);
  }
  
  window.showNotification = showNotification;
</script>

<style>
  @keyframes slide-up {
    from {
      opacity: 0;
      transform: translateY(1rem);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  .animate-slide-up {
    animation: slide-up 0.3s ease-out forwards;
  }
</style> 
